version: "3"

services:
  traefik:
    image: traefik:v2.4.8
    restart: always
    security_opt:
      - no-new-privileges:true
    ports:
      - "80:80"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.routers.traefik.rule=Host(`${HOST_TRAEFIK}`)"
      - "traefik.http.routers.traefik.service=api@internal"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
      - ./traefik/traefik.dev.yml:/traefik.yml:ro
      - ./docker/logs/traefik:/logs
      - ./traefik/configurations:/configurations
    networks:
      - proxy-net

  frontend:
    build:
      context: ./app
    depends_on:
      - api
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.routers.frontend.rule=Host(`${HOST_UI}`)"
      - "traefik.http.routers.frontend.service=frontend"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
    networks:
      - proxy-net

  mongo:
    image: mongo:4.4.4
    security_opt:
      - no-new-privileges:true
    ports:
    - "27018:27017"
    volumes:
      - ./docker/mongo:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - proxy-net

  api:
    build: ./api
    container_name: nfc-api
    security_opt:
      - no-new-privileges:true
    depends_on:
      - mongo
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.routers.api.rule=Host(`${HOST_API}`)"
      - "traefik.http.routers.api.service=api"
      - "traefik.http.services.api.loadbalancer.server.port=3010"
    networks:
      - proxy-net

networks:
  proxy-net:
    driver: bridge
